{
  "version": 3,
  "sources": ["../../@vaadin/react-components/src/GridColumn.tsx", "../../@vaadin/react-components/src/generated/GridColumn.ts", "../../@vaadin/react-components/src/renderers/useSimpleRenderer.ts", "../../@vaadin/react-components/src/renderers/useSimpleOrChildrenRenderer.ts"],
  "sourcesContent": ["export * from \"@vaadin/grid/vaadin-grid-column.js\";\nimport {\n  type ComponentType,\n  type ForwardedRef,\n  forwardRef,\n  type ReactElement,\n  type ReactNode,\n  type RefAttributes,\n} from 'react';\nimport type { GridDefaultItem } from './generated/Grid.js';\nimport {\n  GridColumn as _GridColumn,\n  type GridColumnElement,\n  type GridColumnProps as _GridColumnProps,\n} from './generated/GridColumn.js';\nimport type { GridBodyReactRendererProps, GridEdgeReactRendererProps } from './renderers/grid.js';\nimport { useModelRenderer } from './renderers/useModelRenderer.js';\nimport { useSimpleOrChildrenRenderer } from './renderers/useSimpleOrChildrenRenderer.js';\n\nexport * from './generated/GridColumn.js';\n\n// Properties from HTMLAttributes that are omitted from all GridColumn types\nexport type OmittedGridColumnHTMLAttributes<TItem> = Omit<\n  React.HTMLAttributes<GridColumnElement<TItem>>,\n  'hidden' | 'id' | 'className' | 'dangerouslySetInnerHTML' | 'slot' | 'children' | 'title'\n>;\n\nexport type GridColumnProps<TItem> = Partial<\n  Omit<\n    _GridColumnProps<TItem>,\n    | 'children'\n    | 'footerRenderer'\n    | 'header'\n    | 'headerRenderer'\n    | 'renderer'\n    | keyof OmittedGridColumnHTMLAttributes<TItem>\n  >\n> &\n  Readonly<{\n    children?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n    footer?: ReactNode;\n    /**\n     * @deprecated Use `footer` instead.\n     */\n    footerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    header?: ReactNode;\n    /**\n     * @deprecated Use `header` instead.\n     */\n    headerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    renderer?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n  }>;\n\nfunction GridColumn<TItem = GridDefaultItem>(\n  { children, footer, header, ...props }: GridColumnProps<TItem>,\n  ref: ForwardedRef<GridColumnElement<TItem>>,\n): ReactElement | null {\n  const [headerPortals, headerRenderer] = useSimpleOrChildrenRenderer(props.headerRenderer, header, {\n    renderSync: true,\n  });\n  const [footerPortals, footerRenderer] = useSimpleOrChildrenRenderer(props.footerRenderer, footer, {\n    renderSync: true,\n  });\n  const [bodyPortals, bodyRenderer] = useModelRenderer(props.renderer ?? children, {\n    renderSync: true,\n  });\n\n  return (\n    <_GridColumn<TItem>\n      {...props}\n      footerRenderer={footerRenderer}\n      headerRenderer={headerRenderer}\n      ref={ref}\n      renderer={bodyRenderer}\n    >\n      {headerPortals}\n      {footerPortals}\n      {bodyPortals}\n    </_GridColumn>\n  );\n}\n\nconst ForwardedGridColumn = forwardRef(GridColumn) as <TItem = GridDefaultItem>(\n  props: GridColumnProps<TItem> & RefAttributes<GridColumnElement<TItem>>,\n) => ReactElement | null;\n\nexport { ForwardedGridColumn as GridColumn };\n", "import type {} from \"@lit/react\";\nimport { GridColumn as GridColumnElement, } from \"@vaadin/grid/vaadin-grid-column.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { GridColumnElement, };\nexport type GridColumnEventMap = Readonly<{}>;\nconst events = {} as GridColumnEventMap;\nexport type GridColumnProps<T1> = WebComponentProps<GridColumnElement<T1>, GridColumnEventMap>;\nexport const GridColumn = createComponent({\n    elementClass: GridColumnElement, events, react: React, tagName: \"vaadin-grid-column\"\n}) as <T1>(props: GridColumnProps<T1> & React.RefAttributes<GridColumnElement<T1>>) => React.ReactElement | null;\n", "import type { ComponentType, PropsWithChildren } from 'react';\nimport type { Slice } from './renderer.js';\nimport { useRenderer, type RendererConfig, type UseRendererResult } from './useRenderer.js';\n\nexport type ReactSimpleRendererProps<O extends HTMLElement> = Readonly<{\n  original: O;\n}>;\nexport type WebComponentSimpleRenderer<O extends HTMLElement> = (root: HTMLElement, original: O) => void;\n\nfunction convertSimpleRendererArgs<O extends HTMLElement>([original]: Slice<\n  Parameters<WebComponentSimpleRenderer<O>>,\n  1\n>): PropsWithChildren<ReactSimpleRendererProps<O>> {\n  return { original };\n}\n\nexport function useSimpleRenderer<O extends HTMLElement>(\n  reactRenderer?: ComponentType<ReactSimpleRendererProps<O>> | null,\n  config?: RendererConfig,\n): UseRendererResult<WebComponentSimpleRenderer<O>> {\n  return useRenderer(reactRenderer, convertSimpleRendererArgs, config);\n}\n", "import type { ComponentType, ReactNode } from 'react';\nimport { useRenderer } from './useRenderer.js';\nimport type { RendererConfig, UseRendererResult } from './useRenderer.js';\nimport {\n  type ReactSimpleRendererProps,\n  useSimpleRenderer,\n  type WebComponentSimpleRenderer,\n} from './useSimpleRenderer.js';\n\nexport function useSimpleOrChildrenRenderer<O extends HTMLElement>(\n  fnRenderer?: ComponentType<ReactSimpleRendererProps<O>> | null,\n  children?: ReactNode | ComponentType<ReactSimpleRendererProps<O>>,\n  config?: RendererConfig,\n): UseRendererResult<WebComponentSimpleRenderer<O>> {\n  let _children: ReactNode | undefined;\n  let _fnRenderer: ComponentType<ReactSimpleRendererProps<O>> | null | undefined;\n  let shouldUseSimpleRendererResult = false;\n\n  if (typeof children === 'function') {\n    _children = undefined;\n    _fnRenderer = children;\n    shouldUseSimpleRendererResult = true;\n  } else {\n    _children = children;\n    _fnRenderer = fnRenderer;\n    shouldUseSimpleRendererResult = !!_fnRenderer;\n  }\n\n  const useChildrenRendererResult = useRenderer(_children, undefined, config);\n  const useSimpleRendererResult = useSimpleRenderer(_fnRenderer, config);\n\n  return shouldUseSimpleRendererResult ? useSimpleRendererResult : useChildrenRendererResult;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AACA,mBAOO;ACNP,IAAAA,KAAuB;ADFvB,cAAc;ACCd,SAAS,cAAcC,SAA0B;;;ACQjD,SAASC,EAAiD,CAACC,CAAQ,GAGhB;AACjD,SAAO,EAAE,UAAAA,EAAS;AACpB;AAEO,SAASC,EACdC,GACAC,IACkD;AAClD,SAAOC,EAAYF,GAAeH,GAA2BI,EAAM;AACrE;;;ACZO,SAASE,EACdC,IACAC,IACAC,GACkD;AAClD,MAAIC,GACAC,GACAC,KAAgC;AAEhC,SAAOJ,MAAa,cACtBE,IAAY,QACZC,IAAcH,IACdI,KAAgC,SAEhCF,IAAYF,IACZG,IAAcJ,IACdK,KAAgC,CAAC,CAACD;AAGpC,QAAME,KAA4BC,EAAYJ,GAAW,QAAWD,CAAM,GACpEM,KAA0BC,EAAkBL,GAAaF,CAAM;AAErE,SAAOG,KAAgCG,KAA0BF;AACnE;;;AHoCI,yBAAA;AC9DJ,IAAMI,IAAS,CAAC;AAAhB,IAEaC,IAAaC,EAAgB,EACtC,cAAcC,GAAmB,QAAAH,GAAQ,OAAOI,IAAO,SAAS,qBACpE,CAAC;AD2CD,SAASH,EACP,EAAE,UAAAI,GAAU,QAAAC,GAAQ,QAAAC,IAAQ,GAAGC,EAAM,GACrCC,GACqB;AACrB,MAAM,CAACC,GAAeC,CAAc,IAAIC,EAA4BJ,EAAM,gBAAgBD,IAAQ,EAChG,YAAY,KACd,CAAC,GACK,CAACM,IAAeC,CAAc,IAAIF,EAA4BJ,EAAM,gBAAgBF,GAAQ,EAChG,YAAY,KACd,CAAC,GACK,CAACS,IAAaC,EAAY,IAAIC,EAAiBT,EAAM,YAAYH,GAAU,EAC/E,YAAY,KACd,CAAC;AAED,aACEa,mBAAAA,MAACjB,GAAA,EACE,GAAGO,GACJ,gBAAgBM,GAChB,gBAAgBH,GAChB,KAAKF,GACL,UAAUO,IAET,UAAA,CAAAN,GACAG,IACAE,EAAAA,EAAAA,CACH;AAEJ;AAEA,IAAMI,QAAsBC,aAAAA,YAAWnB,CAAU;",
  "names": ["C", "GridColumnElement", "convertSimpleRendererArgs", "original", "useSimpleRenderer", "reactRenderer", "config", "useRenderer", "useSimpleOrChildrenRenderer", "fnRenderer", "children", "config", "_children", "_fnRenderer", "shouldUseSimpleRendererResult", "useChildrenRendererResult", "useRenderer", "useSimpleRendererResult", "useSimpleRenderer", "events", "GridColumn", "createComponent", "GridColumnElement", "React", "children", "footer", "header", "props", "ref", "headerPortals", "headerRenderer", "useSimpleOrChildrenRenderer", "footerPortals", "footerRenderer", "bodyPortals", "bodyRenderer", "useModelRenderer", "jsxs", "ForwardedGridColumn", "forwardRef"]
}
